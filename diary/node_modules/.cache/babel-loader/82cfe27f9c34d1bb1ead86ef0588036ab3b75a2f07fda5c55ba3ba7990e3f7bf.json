{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sherr\\\\react\\\\front-end\\\\diary\\\\src\\\\components\\\\Contents\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Filler } from \"chart.js\";\nimport Calendar from \"react-calendar\"; // react-calendar 사용\nimport \"react-calendar/dist/Calendar.css\";\nimport './Dashboard.css';\nimport \"./DiaryCalendar.css\";\nimport user from '../../assets/user.png';\nimport users from '../../assets/users.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Filler);\nfunction Dashboard() {\n  _s();\n  const navigate = useNavigate();\n  const [averageTemp, setAverageTemp] = useState(\"---°C\");\n  const [weeklyTemps, setWeeklyTemps] = useState([0, 0, 0, 0, 0, 0, 0]);\n  const [period, setPeriod] = useState(\"\");\n  const [isCharacterSet, setIsCharacterSet] = useState(false); // 캐릭터 설정 여부 상태\n  const [diaryDates, setDiaryDates] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const API_BASE_URL = \"http://localhost:8080/api/statistic\";\n  const fetchTemperature = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        throw new Error(\"JWT 토큰이 없습니다. 로그인이 필요합니다.\");\n      }\n      const response = await fetch(`${API_BASE_URL}/weekly`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP 오류 발생! 상태 코드: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data && data.weeklyData) {\n        const temps = data.weeklyData.map(day => day.temperature);\n        setWeeklyTemps(temps);\n        const avgTemp = (temps.reduce((sum, temp) => sum + temp, 0) / temps.length).toFixed(1);\n        setAverageTemp(`${avgTemp}°C`);\n        setPeriod(data.period);\n      } else {\n        setWeeklyTemps([0, 0, 0, 0, 0, 0, 0]);\n        setAverageTemp(\"---°C\");\n        setPeriod(\"기간 정보 없음\");\n      }\n    } catch (error) {\n      console.error(\"온도 데이터를 가져오는 중 오류 발생:\", error.message);\n      setWeeklyTemps([0, 0, 0, 0, 0, 0, 0]);\n      setAverageTemp(\"---°C\");\n      setPeriod(\"기간 정보 없음\");\n    }\n  };\n\n  // 사용자 ID를 기반으로 캐릭터 설정 여부 확인\n  const fetchCharacterStatus = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const userId = localStorage.getItem(\"userId\"); // 사용자 ID 가져오기\n      if (!token || !userId) {\n        throw new Error(\"로그인이 필요하거나 사용자 ID가 없습니다.\");\n      }\n      const response = await fetch(`http://localhost:8080/api/characters/${userId}`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setIsCharacterSet(data.character ? true : false); // character 여부에 따라 상태 설정\n      } else {\n        setIsCharacterSet(false); // 에러가 발생하면 캐릭터 미설정으로 간주\n      }\n    } catch (error) {\n      console.error(\"캐릭터 상태를 가져오는 중 오류 발생:\", error.message);\n      setIsCharacterSet(false); // 에러가 발생하면 캐릭터 미설정으로 간주\n    }\n  };\n  useEffect(() => {\n    fetchTemperature();\n    fetchCharacterStatus(); // 캐릭터 상태 확인\n  }, []);\n  useEffect(() => {\n    const fetchDiaryData = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n          throw new Error(\"JWT 토큰이 없습니다. 로그인이 필요합니다.\");\n        }\n        const response = await fetch(`http://localhost:8080/api/diary/dates/${selectedDate.getFullYear()}/${selectedDate.getMonth() + 1}`, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP 오류 발생! 상태 코드: ${response.status}`);\n        }\n        const data = await response.json();\n        const diaryDays = data.map(entry => new Date(entry.date)); // API의 일기 날짜 데이터를 Date 객체로 변환\n        setDiaryDates(diaryDays);\n      } catch (error) {\n        console.error(\"일기 데이터를 가져오는 중 오류 발생:\", error.message);\n      }\n    };\n    fetchDiaryData();\n  }, []);\n  const tileContent = ({\n    date,\n    view\n  }) => {\n    // 특정 날짜에 점을 표시\n    if (view === \"month\" && diaryDates.find(d => d.toDateString() === date.toDateString())) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 20\n      }, this);\n    }\n  };\n  const handleSoloWrite = () => navigate('/Writing1');\n  const handleStatsPage = () => navigate('/Statistics');\n  const handleCharacterPage = () => navigate('/Character');\n  const handleDiaryRecord = () => navigate('/Diaryrecord');\n  const createGradient = () => {\n    const ctx = document.createElement('canvas').getContext('2d');\n    const gradient = ctx.createLinearGradient(0, 0, 0, 400);\n    gradient.addColorStop(0, '#FDFCDC80');\n    gradient.addColorStop(1, '#E9F3CB80');\n    return gradient;\n  };\n  const chartData = {\n    labels: ['월', '화', '수', '목', '금', '토', '일'],\n    datasets: [{\n      label: 'Temperature',\n      data: weeklyTemps,\n      borderColor: '#191919',\n      backgroundColor: createGradient(),\n      fill: true,\n      tension: 0.4,\n      pointRadius: 4,\n      pointBackgroundColor: '#FF9B9B',\n      borderWidth: 2\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        callbacks: {\n          label: context => `${context.parsed.y}°C`\n        }\n      }\n    },\n    scales: {\n      x: {\n        ticks: {\n          color: '#666'\n        }\n      },\n      y: {\n        grid: {\n          display: false\n        },\n        min: -10,\n        max: 50,\n        ticks: {\n          stepSize: 5,\n          color: '#666'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"welcome-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uC624\\uB298 \\uD558\\uB8E8\\uB97C \\uAE30\\uB85D\\uD574\\uBCF4\\uC544\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uAE30\\uB85D\\uC740 \\uB2F9\\uC2E0\\uC758 \\uB9C8\\uC74C\\uACFC \\uC2DC\\uAC04\\uC744 \\uC5F0\\uACB0\\uD558\\uB294 \\uB2E4\\uC774\\uC5B4\\uB9AC\\uC785\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uB2F9\\uC2E0\\uC758 \\uCD94\\uC5B5\\uC744 \\uAE30\\uB85D\\uD574\\uC904 FeelsLike\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"diary-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"diary-button\",\n          onClick: handleSoloWrite,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: user,\n            alt: \"solo user\",\n            className: \"user-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"\\uB098 \\uD63C\\uC790 \\uC77C\\uAE30 \\uC4F0\\uB7EC\\uAC00\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\uB098\\uB9CC\\uC758 \\uC77C\\uC0C1 \\uC77C\\uAE30\\uC640 \\uC9C8\\uBB38 \\uC77C\\uAE30\\uB97C \\uC791\\uC131\\uD574\\uC694.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"arrow\",\n            children: \"\\u203A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"diary-button\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: users,\n            alt: \"multiple users\",\n            className: \"user-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"\\uCE5C\\uAD6C\\uC640 \\uC77C\\uAE30 \\uC4F0\\uB7EC\\uAC00\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\uCE5C\\uAD6C\\uB4E4\\uACFC \\uAC19\\uC774 \\uC77C\\uAE30\\uB97C \\uC4F0\\uBA70 \\uCD94\\uC5B5\\uC744 \\uAE30\\uB85D\\uD574\\uC694.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"arrow\",\n            children: \"\\u203A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uB098\\uC758 \\uC628\\uB3C4 \\uD3C9\\uADE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"view-more\",\n            onClick: handleStatsPage,\n            children: \"\\uC5F0\\uB3C4, \\uC6D4, \\uC8FC\\uBCC4\\uB85C \\uBD84\\uC11D\\uD558\\uACE0 \\uC2F6\\uC5B4\\uC694 \\u203A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"temperature-display\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"period\",\n            children: period\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"temp\",\n            children: [\"\\uC774\\uBC88\\uC8FC \\uD3C9\\uADE0 \\uC628\\uB3C4 \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"cel\",\n              children: averageTemp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 58\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-container\",\n          style: {\n            height: '250px',\n            padding: '20px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            data: chartData,\n            options: chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"character-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\uB098\\uB9CC\\uC758 \\uCE90\\uB9AD\\uD130\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"view-more\",\n              onClick: handleCharacterPage,\n              children: \"\\uC790\\uC138\\uD788 \\uBCF4\\uAE30 \\u203A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this), !isCharacterSet && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"character-message\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\uCE90\\uB9AD\\uD130\\uB97C \\uC124\\uC815\\uD574\\uC8FC\\uC138\\uC694.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"diary-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\uB098\\uC758 \\uC77C\\uAE30 \\uAE30\\uB85D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"view-more\",\n              onClick: handleDiaryRecord,\n              children: \"\\uC790\\uC138\\uD788 \\uBCF4\\uAE30 \\u203A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n            onChange: setSelectedDate,\n            value: selectedDate,\n            tileContent: tileContent,\n            locale: \"en-US\",\n            formatShortWeekday: (locale, date) => ['일', '월', '화', '수', '목', '금', '토'][date.getDay()],\n            formatMonth: (locale, date) => ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월'][date.getMonth()]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 9\n  }, this);\n}\n_s(Dashboard, \"VCrxrQWjHgy4kr4DroFrLOue7a0=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Filler","Calendar","user","users","jsxDEV","_jsxDEV","register","Dashboard","_s","navigate","averageTemp","setAverageTemp","weeklyTemps","setWeeklyTemps","period","setPeriod","isCharacterSet","setIsCharacterSet","diaryDates","setDiaryDates","selectedDate","setSelectedDate","Date","API_BASE_URL","fetchTemperature","token","localStorage","getItem","Error","response","fetch","method","headers","Authorization","ok","status","data","json","weeklyData","temps","map","day","temperature","avgTemp","reduce","sum","temp","length","toFixed","error","console","message","fetchCharacterStatus","userId","character","fetchDiaryData","getFullYear","getMonth","diaryDays","entry","date","tileContent","view","find","d","toDateString","className","fileName","_jsxFileName","lineNumber","columnNumber","handleSoloWrite","handleStatsPage","handleCharacterPage","handleDiaryRecord","createGradient","ctx","document","createElement","getContext","gradient","createLinearGradient","addColorStop","chartData","labels","datasets","label","borderColor","backgroundColor","fill","tension","pointRadius","pointBackgroundColor","borderWidth","chartOptions","responsive","maintainAspectRatio","plugins","legend","display","tooltip","callbacks","context","parsed","y","scales","x","ticks","color","grid","min","max","stepSize","children","onClick","src","alt","style","height","padding","options","onChange","value","locale","formatShortWeekday","getDay","formatMonth","_c","$RefreshReg$"],"sources":["C:/Users/sherr/react/front-end/diary/src/components/Contents/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Line } from \"react-chartjs-2\";\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Filler\n} from \"chart.js\";\nimport Calendar from \"react-calendar\"; // react-calendar 사용\nimport \"react-calendar/dist/Calendar.css\";\nimport './Dashboard.css';\nimport \"./DiaryCalendar.css\";\nimport user from '../../assets/user.png';\nimport users from '../../assets/users.png';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Filler\n);\n\nfunction Dashboard() {\n    const navigate = useNavigate();\n    const [averageTemp, setAverageTemp] = useState(\"---°C\");\n    const [weeklyTemps, setWeeklyTemps] = useState([0, 0, 0, 0, 0, 0, 0]);\n    const [period, setPeriod] = useState(\"\");\n    const [isCharacterSet, setIsCharacterSet] = useState(false); // 캐릭터 설정 여부 상태\n    const [diaryDates, setDiaryDates] = useState([]);\n    const [selectedDate, setSelectedDate] = useState(new Date());\n\n    const API_BASE_URL = \"http://localhost:8080/api/statistic\";\n\n    const fetchTemperature = async () => {\n        try {\n            const token = localStorage.getItem(\"token\");\n            if (!token) {\n                throw new Error(\"JWT 토큰이 없습니다. 로그인이 필요합니다.\");\n            }\n\n            const response = await fetch(`${API_BASE_URL}/weekly`, {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                },\n            });\n\n            if (!response.ok) {\n                throw new Error(`HTTP 오류 발생! 상태 코드: ${response.status}`);\n            }\n\n            const data = await response.json();\n            if (data && data.weeklyData) {\n                const temps = data.weeklyData.map((day) => day.temperature);\n                setWeeklyTemps(temps);\n\n                const avgTemp = (\n                    temps.reduce((sum, temp) => sum + temp, 0) / temps.length\n                ).toFixed(1);\n                setAverageTemp(`${avgTemp}°C`);\n\n                setPeriod(data.period);\n            } else {\n                setWeeklyTemps([0, 0, 0, 0, 0, 0, 0]);\n                setAverageTemp(\"---°C\");\n                setPeriod(\"기간 정보 없음\");\n            }\n        } catch (error) {\n            console.error(\"온도 데이터를 가져오는 중 오류 발생:\", error.message);\n            setWeeklyTemps([0, 0, 0, 0, 0, 0, 0]);\n            setAverageTemp(\"---°C\");\n            setPeriod(\"기간 정보 없음\");\n        }\n    };\n\n    // 사용자 ID를 기반으로 캐릭터 설정 여부 확인\n    const fetchCharacterStatus = async () => {\n        try {\n            const token = localStorage.getItem(\"token\");\n            const userId = localStorage.getItem(\"userId\"); // 사용자 ID 가져오기\n            if (!token || !userId) {\n                throw new Error(\"로그인이 필요하거나 사용자 ID가 없습니다.\");\n            }\n\n            const response = await fetch(`http://localhost:8080/api/characters/${userId}`, {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: `Bearer ${token}`,\n                },\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                setIsCharacterSet(data.character ? true : false); // character 여부에 따라 상태 설정\n            } else {\n                setIsCharacterSet(false); // 에러가 발생하면 캐릭터 미설정으로 간주\n            }\n        } catch (error) {\n            console.error(\"캐릭터 상태를 가져오는 중 오류 발생:\", error.message);\n            setIsCharacterSet(false); // 에러가 발생하면 캐릭터 미설정으로 간주\n        }\n    };\n\n    useEffect(() => {\n        fetchTemperature();\n        fetchCharacterStatus(); // 캐릭터 상태 확인\n    }, []);\n\n    useEffect(() => {\n        const fetchDiaryData = async () => {\n            try {\n                const token = localStorage.getItem(\"token\");\n                if (!token) {\n                    throw new Error(\"JWT 토큰이 없습니다. 로그인이 필요합니다.\");\n                }\n\n                const response = await fetch(`http://localhost:8080/api/diary/dates/${selectedDate.getFullYear()}/${selectedDate.getMonth() + 1}`, {\n                    method: \"GET\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `Bearer ${token}`,\n                    },\n                });\n\n                if (!response.ok) {\n                    throw new Error(`HTTP 오류 발생! 상태 코드: ${response.status}`);\n                }\n\n                const data = await response.json();\n                const diaryDays = data.map((entry) => new Date(entry.date)); // API의 일기 날짜 데이터를 Date 객체로 변환\n                setDiaryDates(diaryDays);\n            } catch (error) {\n                console.error(\"일기 데이터를 가져오는 중 오류 발생:\", error.message);\n            }\n        };\n        fetchDiaryData();\n    }, []);\n\n    const tileContent = ({ date, view }) => {\n        // 특정 날짜에 점을 표시\n        if (view === \"month\" && diaryDates.find((d) => d.toDateString() === date.toDateString())) {\n            return <div className=\"dot\"></div>;\n        }\n    };\n\n    const handleSoloWrite = () => navigate('/Writing1');\n    const handleStatsPage = () => navigate('/Statistics');\n    const handleCharacterPage = () => navigate('/Character');\n    const handleDiaryRecord = () => navigate('/Diaryrecord');\n\n    const createGradient = () => {\n        const ctx = document.createElement('canvas').getContext('2d');\n        const gradient = ctx.createLinearGradient(0, 0, 0, 400);\n        gradient.addColorStop(0, '#FDFCDC80');\n        gradient.addColorStop(1, '#E9F3CB80');\n        return gradient;\n    };\n\n    const chartData = {\n        labels: ['월', '화', '수', '목', '금', '토', '일'],\n        datasets: [{\n            label: 'Temperature',\n            data: weeklyTemps,\n            borderColor: '#191919',\n            backgroundColor: createGradient(),\n            fill: true,\n            tension: 0.4,\n            pointRadius: 4,\n            pointBackgroundColor: '#FF9B9B',\n            borderWidth: 2\n        }]\n    };\n\n    const chartOptions = {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n            legend: { display: false },\n            tooltip: {\n                callbacks: {\n                    label: (context) => `${context.parsed.y}°C`\n                }\n            }\n        },\n        scales: {\n            x: { ticks: { color: '#666' } },\n            y: { grid: { display: false} ,min: -10, max: 50, ticks: { stepSize: 5, color: '#666' } }\n        }\n    };\n\n    return (\n        <div className=\"dashboard-container\">\n            <div className=\"welcome-section\">\n                <h1>오늘 하루를 기록해보아요</h1>\n                <p>기록은 당신의 마음과 시간을 연결하는 다이어리입니다.</p>\n                <p>당신의 추억을 기록해줄 FeelsLike</p>\n\n                <div className=\"diary-buttons\">\n                    <button className=\"diary-button\" onClick={handleSoloWrite}>\n                        <img src={user} alt=\"solo user\" className=\"user-icon\" />\n                        <div className=\"button-content\">\n                            <h2>나 혼자 일기 쓰러가기</h2>\n                            <p>나만의 일상 일기와 질문 일기를 작성해요.</p>\n                        </div>\n                        <span className=\"arrow\">›</span>\n                    </button>\n\n                    <button className=\"diary-button\">\n                        <img src={users} alt=\"multiple users\" className=\"user-icon\" />\n                        <div className=\"button-content\">\n                            <h2>친구와 일기 쓰러가기</h2>\n                            <p>친구들과 같이 일기를 쓰며 추억을 기록해요.</p>\n                        </div>\n                        <span className=\"arrow\">›</span>\n                    </button>\n                </div>\n            </div>\n\n            <div className=\"main-content\">\n                <div className=\"stats-section\">\n                    <div className=\"stats-header\">\n                        <h3>나의 온도 평균</h3>\n                        <span className=\"view-more\" onClick={handleStatsPage}>\n                            연도, 월, 주별로 분석하고 싶어요 ›\n                        </span>\n                    </div>\n                    <div className=\"temperature-display\">\n                        <span className=\"period\">{period}</span>\n                        <span className=\"temp\">이번주 평균 온도 <span className=\"cel\">{averageTemp}</span></span>\n                    </div>\n                    <div className=\"graph-container\" style={{ height: '250px', padding: '20px' }}>\n                        <Line data={chartData} options={chartOptions} />\n                    </div>\n                </div>\n\n                <div className=\"bottom-section\">\n                    <div className=\"character-section\">\n                        <div className=\"section-header\">\n                            <h3>나만의 캐릭터</h3>\n                            <span className=\"view-more\" onClick={handleCharacterPage}>자세히 보기 ›</span>\n                        </div>\n                        {/* 캐릭터가 설정되지 않은 경우 메시지 표시 */}\n                        {!isCharacterSet && (\n                            <div className=\"character-message\">\n                                <p>캐릭터를 설정해주세요.</p>\n                            </div>\n                        )}\n                    </div>\n                    <div className=\"diary-section\">\n                        <div className=\"section-header\">\n                            <h3>나의 일기 기록</h3>\n                            <span className=\"view-more\" onClick={handleDiaryRecord}>자세히 보기 ›</span>\n                        </div>\n                        <Calendar\n                            onChange={setSelectedDate}\n                            value={selectedDate}\n                            tileContent={tileContent}\n                            locale=\"en-US\"\n                            formatShortWeekday={(locale, date) =>\n                                ['일', '월', '화', '수', '목', '금', '토'][date.getDay()]\n                            }\n                            formatMonth={(locale, date) =>\n                                ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월'][date.getMonth()]\n                            }\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}